set number relativenumber
set idearefactormode=keep
set ideajoin
set surround
set easymotion
set ignorecase
set multiple-cursors
set clipboard=unnamed
let g:EasyMotion_override_acejump = 0

let mapleader = " "

noremap <Esc> <Nop>
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

"seems this command doesn't work
"nnoremap p "0p

"take a look how it works
nnoremap d "_d
vnoremap d "_d
nnoremap D "_D
vnoremap D "_D
nnoremap c "_c
vnoremap c "_c
nnoremap C "_C
vnoremap C "_C

nnoremap <C-j> :m +1<CR>
nnoremap <C-k> :m -2<CR>
inoremap <C-j> <Esc>:m +1<CR>gi
inoremap <C-k> <Esc>:m -2<CR>gi

" system clipboard
vmap <leader>y "+y
vmap <leader>d "+d
nmap <leader>y "+yy
nmap <leader>p "+p
nmap <leader>P "+P
vmap <leader>p "+p
vmap <leader>P "+P

" actions
map <leader><leader>f{char} <Plug>(easymotion-f)
map <leader><leader>F{char} <Plug>(easymotion-F)
"map <leader><leader>t <Plug>(easymotion-t)
"map <leader><leader>T <Plug>(easymotion-T)
map <leader><leader>w <Plug>(easymotion-w)
map <leader><leader>W <Plug>(easymotion-W)
map <leader><leader>b <Plug>(easymotion-b)
map <leader><leader>B <Plug>(easymotion-B)
map <leader><leader>e <Plug>(easymotion-e)
map <leader><leader>E <Plug>(easymotion-E)
map <leader><leader>ge <Plug>(easymotion-ge)
map <leader><leader>gE <Plug>(easymotion-gE)
map <leader><leader>j <Plug>(easymotion-j)
map <leader><leader>k <Plug>(easymotion-k)
map <leader><leader>n <Plug>(easymotion-n)
map <leader><leader>N <Plug>(easymotion-N)
map <leader>f <Plug>(easymotion-s) 

"<Leader>f{char}      | Find {char} to the right. See |f|.
"<Leader>F{char}      | Find {char} to the left. See |F|.
"<Leader>t{char}      | Till before the {char} to the right. See |t|.
"<Leader>T{char}      | Till after the {char} to the left. See |T|.
"<Leader>w            | Beginning of word forward. See |w|.
"<Leader>W            | Beginning of WORD forward. See |W|.
"<Leader>b            | Beginning of word backward. See |b|.
"<Leader>B            | Beginning of WORD backward. See |B|.
"<Leader>e            | End of word forward. See |e|.
"<Leader>E            | End of WORD forward. See |E|.
"<Leader>ge           | End of word backward. See |ge|.
"<Leader>gE           | End of WORD backward. See |gE|.
"<Leader>j            | Line downward. See |j|.
"<Leader>k            | Line upward. See |k|.
"<Leader>n            | Jump to latest "/" or "?" forward. See |n|.
"<Leader>N            | Jump to latest "/" or "?" backward. See |N|.
"<Leader>s            | Find(Search) {char} forward and backward.

nmap gd <Action>(GotoDeclaration)
nmap gi <Action>(ReSharperGotoImplementation)

map <leader>n <Action>(SearchEverywhere)
"map <leader>n <Action>(GotoSymbol)
map <leader>t <Action>(ActivateTerminalToolWindow)
map <leader>cn <Action>(RenameElement)
nmap <leader>ge <Action>(Generate)
map <leader>d <Action>(Debug)
nmap <leader>h <Action>(PreviousTab)
nmap <leader>l <Action>(NextTab)
nmap <leader>/ <Action>(ShowErrorDescription)
map <leader>o <Action>(FileStructurePopup)
map <leader>rc <Action>(ReformatCode)
map <leader>a <Action>(ShowIntentionActions)
nnoremap <leader><leader> <C-Tab>
nmap <leader>x <action>(CloseEditor)
map <leader>ex <Action>(ActivateProjectToolWindow)
map <leader><leader>t <Action>(MoveEditorToOppositeTabGroup)
"nmap <leader>m <action>(Git.Menu)
"map <leader>h <Action>(Vcs.ShowTabbedFileHistory)
"map <S-Space> <Action>(GotoNextError)

set NERDTree
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'
"vnoremap C
